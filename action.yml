name: asoc-dast-action
description: 'Scan for security issues in web applications'
branding:
  icon: check-circle
  color: blue
inputs:
  baseurl:
    description: 'baseURL of ASOC API'
    required: true
    default: 'https://cloud.appscan.com'
  asoc_key:
    description: 'API key for connecting to ASoC.'
    required: true
  asoc_secret:
    description: 'Secret for connecting to ASoC.'
    required: true
  application_id:
    description: 'The ASoC application id where your scan will appear.'
    required: true
  scan_name:
    description: 'The name of the scan created in ASoC.'
    required: false
  scan_type:
    description: 'The type of scan - staging or production'
    required: false
    default: 'staging'

  
  #dast or scan file
  dynamic_scan_type: 
    description: 'Choose between dast or upload. DAST will require you to specify starting URL and login, while upload will only require you to specify a .scan or .scant file'
    required: true
    default: dast
  scan_or_scant_file:
    description: "If dynamic_scan_type is set to \"upload\", then you will need to provide the .scan or .scant file here"
    required: false

  #DAST starter config
  starting_URL:
    description: 'The starting URL of the DAST scan'
    required: false
    default: https://demo.testfire.net?mode=demo
  login_method:
    description: 'Login Method of the scan, can be none, userpass, or recorded'
    required: false
    default: 'none'
  optimization:
    description: 'Optimization level: NoOptimization, Fast, Faster, Fastest'
    required: false
    default: Fast
  
  #NETWORK
  network:
    description: 'Set the type of network, if this is set to private, you must have AppScan Presence created in advance'
    required: false
    default: 'public'
  presence_id:
    description: 'Provide the appscan presence ID here'
    required: false
  
  #BASIC LOGIN
  login_user:
    description: 'if login_method is userpass, provide the username here'
    required: false
  login_password:
    description: 'if login_method is userpass, provide the password here'
    required: false
  #login_extra_field:
  #  description: 'if login_method is userpass, provide optional 3rd login value'
  #  required: false

  #RECORDEDLOGIN
  login_sequence_file:
    description: 'Provide a path to the Login Traffic File data. Supported file type: CONFIG: AppScan Activity Recorder file'
    required: false
    
  #misc settings
  email_notification:
    description: 'Send email notification uponn scan completion'
    required: false
    default: 'false'

  personal_scan:
    description: 'set to personal scan'
    required: false
    default: 'false'
  #intervention:
  #  description: 'allow scan intervention'
  #  required: false
  #  default: 'false'

  #Wait for analysis settings
  wait_for_analysis:
    description: 'wait for analysis to complete before finishing job'
    required: true
    default: 'true'

  wait_for_analysis_timeout_minutes:
    description: 'maximum duration in minutes before the job will no longer wait and proceeds to complete, default is 360 (6 hours)'
    required: false
    default: '360'
  
  #fail build settings
  fail_for_noncompliance:
    description: 'If fail_for_noncompliance is true, fail the job if any non-compliant issues are found in the scan'
    required: false
    default: 'false'
  fail_by_severity:
    description: 'If fail_by_severity is set to true, failure_threshold must also be set. This will fail the job if any issues equal to or higher (more severe) than failure_threshold are found in the scan.'
    required: false
    default: 'false'
  failure_threshold:
    description: 'If fail_for_noncompliance is enabled, the severity that indicates a failure. Lesser severities will not be considered a failure. For example, if failure_threshold is set to Medium, Informational and/or Low severity issues will not cause a failure. Medium, High, and/or Critical issues will cause a failure.	'
    required: false
    default: 'High'

runs:
  using: "composite"
  steps:
    - run: |
        # $env:INPUT_TEST = "${{ inputs.TEST }}"
        $env:INPUT_baseurl = "${{ inputs.baseurl }}"
        $env:INPUT_asoc_key = "${{inputs.asoc_key}}"
        $env:INPUT_asoc_secret = "${{inputs.asoc_secret}}"
        $env:INPUT_application_id = "${{inputs.application_id}}"
        $env:INPUT_scan_name = "${{ inputs.scan_name }}"
        $env:INPUT_scan_type = "${{ inputs.scan_type }}"
        $env:INPUT_starting_URL = "${{ inputs.starting_URL }}"
        $env:INPUT_login_method = "${{ inputs.login_method }}"
        $env:INPUT_optimization = "${{ inputs.optimization }}"

        #DAST or SCAN File
        $env:INPUT_dynamic_scan_type = "${{ inputs.dynamic_scan_type }}"
        $env:INPUT_scan_or_scant_file = "${{ inputs.scan_or_scant_file }}"

        #NETWORK
        $env:INPUT_network = "${{ inputs.network }}"
        $env:INPUT_presence_id = "${{ inputs.presence_id }}"

        #BASICAUTH
        $env:INPUT_login_user = "${{ inputs.login_user }}"
        $env:INPUT_login_password = "${{ inputs.login_password }}"
        $env:INPUT_login_extra_field = "${{ inputs.login_extra_field }}"

        #RECORDEDLOGIN
        $env:INPUT_login_sequence_file = "${{ inputs.login_sequence_file }}"

        #MISC
        $env:INPUT_email_notification = "${{ inputs.email_notification }}"
        $env:INPUT_personal_scan = "${{ inputs.personal_scan }}"
        $env:INPUT_intervention = "${{ inputs.intervention }}"

        $env:INPUT_wait_for_analysis = "${{ inputs.wait_for_analysis }}"
        $env:INPUT_wait_for_analysis_timeout_minutes = "${{ inputs.wait_for_analysis_timeout_minutes }}"
        $env:INPUT_fail_for_noncompliance = "${{ inputs.fail_for_noncompliance }}"

        $env:INPUT_fail_by_severity = "${{ inputs.fail_by_severity }}"
        $env:INPUT_failure_threshold = "${{ inputs.failure_threshold }}"
        
        ${{ github.action_path }}/asoc.ps1
        ${{ github.action_path }}/main.ps1
      shell: pwsh
    - uses: actions/upload-artifact@v3
      name: Upload HCL AppScan HTML Report to Github Artifacts
      with:
        name: AppScan Security Scan HTML Report 
        path: '**/AppScan*.html'
